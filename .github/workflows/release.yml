name: release

on:
  push:
    tags:
      - "v*"

jobs:
  collect-artifacts:
    name: Collect built artifacts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Find the workflow run for this commit/tag (matrix build)
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Ensure artifacts exist
        run: |
          ls -l dist
          test -n "$(ls -A dist/*.whl 2>/dev/null)" || (echo "No wheels found!" && exit 1)
          test -n "$(ls -A dist/*.tar.gz 2>/dev/null)" || echo "NOTE: sdist missing; ensure wheels job builds it."

      - name: Determine version from tag (sanity)
        id: ver
        run: |
          # tag like v1.2.3 -> 1.2.3
          version="${GITHUB_REF_NAME#v}"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if version exists on PyPI
        id: pypi
        run: |
          set -e
          pkg="gasal2-py"
          ver="${{ steps.ver.outputs.version }}"
          echo "Checking PyPI for $pkg==$ver"
          code=$(curl -s -o /tmp/pypi.json -w "%{http_code}" "https://pypi.org/pypi/${pkg}/json" || true)
          if [ "$code" != "200" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          python - <<'PY'
import json, os, sys
data = json.load(open("/tmp/pypi.json"))
ver = os.environ["VER"]
print("Known releases:", ", ".join(data.get("releases", {}).keys()))
print("Looking for", ver)
print("exists=", ver in data.get("releases", {}))
open(os.environ["GITHUB_OUTPUT"], "a").write(f"exists={'true' if ver in data.get('releases', {}) else 'false'}\n")
PY
        env:
          VER: ${{ steps.ver.outputs.version }}

      - name: Upload GitHub Release assets
        if: steps.pypi.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    needs: [collect-artifacts]
    if: needs.collect-artifacts.outputs.pypi_exists != 'true'
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://pypi.org/p/gasal2-py
    permissions:
      id-token: write   # IMPORTANT for Trusted Publishing
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Verify build completeness
        run: |
          echo "Artifacts:"
          ls -l dist
          # Gate publish on having at least one wheel
          test -n "$(ls -A dist/*.whl 2>/dev/null)" || (echo "No wheels; aborting publish." && exit 1)

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          # Guard against accidental re-uploads
          skip-existing: true

